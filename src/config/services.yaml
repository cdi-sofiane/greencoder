# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  video_directory: '%kernel.project_dir%/public/uploads/'
  public_directory: '%kernel.project_dir%/public/'
  logo_directory: '%kernel.project_dir%/templates/logo/'
  app.environment: '%kernel.environment%'

services:
  # default configuration for services in *this* file


  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'

    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'
      - '../src/Tests/'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller/'
    tags: [ 'controller.service_arguments' ]

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
  app.listener.authentication_success_response:
    class: App\EventListener\AuthenticationSuccessListener
    tags:
      - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }
  app.listener.authentication_failure_response:
    class: App\EventListener\AuthenticationFailureListener
    tags:
  app.listener.access_denied_listener:
    class: App\EventListener\AccessDeniedListener
    tags:
      - { name: kernel.event_listener, event: access_denied_handler }
  app.listener.upload_and_encode_listener:
    class: App\EventListener\UploadAndEncodeListener
    tags:
      - { name: kernel.event_listener, event: kernel.terminate, method: 'onKernelTerminate' }
  app.listener.copy_and_encode_listener:
    class: App\EventListener\CopyAndEncodeListener
    tags:
      - { name: kernel.event_listener, event: kernel.terminate, method: 'onKernelTerminate' }
  app.listener.exception.response.subscriber:
    class: App\EventListener\ExceptionResponseSubsciber
    tags:
  app.listener.user_authentication_listener:
    class: App\EventListener\UserAuthenticationListener
    tags:
  app.listener.report_access_denied_listener:
    class: App\EventListener\ReportAccessDeniedListener
    arguments:
            - '@security.helper'
